
синтаксис для создания архива cf ( c-создать, f- фаил архива)
после f указать директорию и имя архива, после чего указываются директории и файлы для добавления в архив)

$ tar -cf  /tmp/user.tar /home/user
$ du -h /tmp/user.tar
просмотр содержимого архива ключ t
$ tar -tf /tmp/user.tar 
будт использованы относительные пути
$ cd /tmp/
распаковка архива х
$ tar -xf user.tar
=============
$ du -h user.tar
gzip + нужный фаил, ключ к нужен, 
чтобы не удалять оригинальный фаил
$ gzip -k user.tar
$ du -h user .tar
$ du -h user.tar.gz
==============
Совмещение процесса архивации и сжатия
$ tar -czf /tmp/gzipped.tar.gz -C /home/user .
$ du -h gzipped.tar.gz
$ tar -tf gzipped.tar.gz | head -3
$ mkdir restore
$ tar -xf gzipped.tar.gz -C restore
$ ls restore/
=============
hostname
$ date + "%d.%m.%Y_%H-%M"
$ tar -czf /tmp/s(hostname)_$(date + "date + "%d.%m.%Y_%H-%M").tar gz - C /home/user .
$ sudo mkdir /backup
$ sudo chown user:user /backup/
$ tar -czf /backup/$(hostname)_$(date + "date + "%d.%m.%Y_%H-%M").tar gz - C /home/user .
$ ls /backup/
$ cd
$ nano mybackupscript
#!/bin/bash
BDIR=/backup
BDATE=$(date + "%d.%m.%Y_%H-%M")
FILENAME=$BDIR/$(hostname)_$BDATE

tar -czvf $FILENAME.tar.gz -C /home/user . &> $FILENAME.log

Сохранить. закрыть

$ chmod +x mybackupscript
$ ./mybackupscript
$ du -h /backup/*
$ tail сюда добавить то, что выведет
$ crontab -e
 /home/user/mybackupscript
сохранить, закрыть
$ date
$ ls /backup/
$ tail -f /backup/ сюда вставить то, что вышло
теперь научить систему удалять старые бекапы
$ touch -t 202103081800 /backup/ сюда вставить то, что вышло
$ ls -l /backup/ сюда вставить то, что вышло
время поменяется 

$ find /backup/ -mtime +4 -ls
$ Добавить это в скрипт
$ nano mybackupscript

#!/bin/bash
BDIR=/backup
BDATE=$(date + "%d.%m.%Y_%H-%M")
FILENAME=$BDIR/$(hostname)_$BDATE

find /backup/ -mtime +4 -delete
tar -czvf $FILENAME.tar.gz -C /home/user . &> $FILENAME.log

$ ./mybackupscript
$ ls -l /backup/
$ find /backup/ -mtime +4 -ls
автоматическое создание и удаление старых бекапов










